{"version":"0.3.0","body":"function main(workbook: ExcelScript.Workbook) {\n    const sheet = workbook.getActiveWorksheet();\n    const usedRange = sheet.getUsedRange();\n    if (!usedRange) {\n        console.log(\"A planilha está vazia.\");\n        return;\n    }\n\n    const values = usedRange.getValues();\n    const header = values[0] as string[];\n\n    // Identificar índices das colunas\n    const idxDesvinculado = header.indexOf(\"QT_SIT_DESVINCULADO\");\n    const idxTransferido = header.indexOf(\"QT_SIT_TRANSFERIDO\");\n    const idxMatriculados = header.indexOf(\"QT_MAT\");\n\n    if (idxDesvinculado === -1 || idxTransferido === -1 || idxMatriculados === -1) {\n        console.log(\"Uma ou mais colunas necessárias não foram encontradas.\");\n        return;\n    }\n\n    // Descobrir a última coluna usada\n    const lastColumn = usedRange.getColumnCount();\n\n    // Criar cabeçalho da nova coluna \"taxa_de_evasao\"\n    sheet.getCell(0, lastColumn).setValue(\"taxa_de_evasao\");\n\n    // Calcular taxa linha a linha em \"chunks\"\n    const numRows = usedRange.getRowCount();\n\n    for (let i = 1; i < numRows; i++) {\n        const desvinculado = Number(values[i][idxDesvinculado]) || 0;\n        const transferido = Number(values[i][idxTransferido]) || 0;\n        const matriculados = Number(values[i][idxMatriculados]) || 0;\n\n        let taxa = 0;\n        if (matriculados > 0) {\n            taxa = (desvinculado + transferido) / matriculados;\n        }\n\n        // Preencher célula diretamente sem recriar toda a matriz\n        sheet.getCell(i, lastColumn).setValue(taxa);\n    }\n\n    console.log(\"Coluna 'taxa_de_evasao' criada e calculada com sucesso!\");\n}\n","description":"","parameterInfo":"{\"version\":1,\"originalParameterOrder\":[],\"parameterSchema\":{\"type\":\"object\",\"default\":{},\"x-ms-visibility\":\"internal\"},\"returnSchema\":{\"type\":\"object\",\"properties\":{}},\"signature\":{\"comment\":\"\",\"parameters\":[{\"name\":\"workbook\",\"comment\":\"\"}]}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}